}
draw_histogram <- function(dataset) {
  dist_mean <- mean(dataset)
  dist_sd <- sd(dataset)
  gg <- ggplot(as.data.frame(dataset), aes(dataset))
  gg <- gg + geom_histogram(aes(y=..density.., fill=..count..))
  gg <- gg + scale_fill_gradient("Count", low="#DCDCDC", high="#7C7C7C")
  gg <- gg + stat_function(fun=dnorm, color="red",
                           args=list(mean=dist_mean,sd=dist_sd))
  # Adds a density plot on top
  gg <- gg + geom_density(alpha = 0.2, fill="steelblue", colour="steelblue") 
  gg <- gg + ggtitle(paste("Histogram", "( Mean:", round(dist_mean,2), '|',
                           "sd:", signif(dist_sd,2), ")"))
  return(gg)
}
draw_histogram(cell_population_b)
ggsave('Assignment/histogram.png')
repeat_measurements <- function (dataset, sample_size=25, n_repeats=10000) {
  mean_distribution <- sapply(1:n_repeats, function(r)
                                mean(sample(dataset,sample_size))
                              )
  graph <- draw_histogram(mean_distribution)
  return(graph)
}
repeat_measurements(cell_population_b, 25, 10000)
ggsave('Assignment/function_histogram.png')
### Question 4
repeat_measurements(cell_population_b, 3, 10000)
ggsave('Assignment/function_histogram_sample_size_3.png')
### Question 5
repeat_measurements(cell_population_b, 100, 10000)
ggsave('Assignment/almost_normal_histogram.png')
### Question 6
repeat_measurements(cell_population_b, 1000, 10000)
ggsave('Assignment/histogram_sample_size_1000.png')
simulate_cell_measurement <- function(cell_intensity, noise_sd, n_pixels) {
  pixel_readings <- sapply(1:n_pixels, function(r) {
    cell_intensity + rnorm(1, mean=0, sd=noise_sd)
  })
  return(mean(pixel_readings))
}
measurements_80pixels <- replicate(5000, simulate_cell_measurement(1200, 200, 80))
draw_histogram(measurements_80pixels)
draw_histogram(measurements_80pixels)
repeat_measurements_inc_noise(cell_population,16,1024,500,7.5)
repeat_measurements_inc_noise<-function(dataset,sample_size,n_pixels, n_repeats=500,noise_sd=60){
  measurements<-rep(0, n_repeats)
  measured_intensity<-rep(0, sample_size) 
  
  for (i in 1:length(measurements)){
    for (k in 1: sample_size){
      measured_intensity[k]<-simulate_cell_measurement(dataset, noise_sd,n_pixels)
    }
    measurements[i]<-mean(measured_intensity[k])
  }
  draw_histogram(measurements)
  print(paste('sampled cells: ', sample_size ,', pixels per cell: ', n_pixels,', mean: ', mean(measurements),', sd: ',sd(measurements)))
#   uncomment the following line if you want to return the measurement vector
# return(measurements)
}
repeat_measurements_inc_noise<-function(dataset,sample_size,n_pixels, n_repeats=500,noise_sd=60){
    
  measurements<-rep(0, n_repeats)
  measured_intensity<-rep(0, sample_size) 
  
    for (i in 1:length(measurements)){
      for (k in 1: sample_size){
        cell_intensity<-sample(dataset,1)
        measured_intensity[k]<-simulate_cell_measurement(cell_intensity, noise_sd,n_pixels)
      }
      if (i%%100 == 0 ) {
        print(paste('completed ',i,' of ', n_repeats,' repeats'))
        }
    measurements[i]<-mean(measured_intensity)
  }
  draw_histogram(measurements)
  print(paste('sampled cells: ', sample_size ,', pixels per cell: ', n_pixels,', mean: ', mean(measurements),', sd: ',sd(measurements)))
#   uncomment the following line if you want to return the measurement vector
# return(measurements)
}
repeat_measurements_inc_noise(cell_population,16,1024,500,7.5)
repeat_measurements_inc_noise(cell_population,16,1024,500,7.5)
repeat_measurements_inc_noise<-function(dataset,sample_size,n_pixels, n_repeats=500,noise_sd=60){
        
    measurements<-rep(0, n_repeats)
    measured_intensity<-rep(0, sample_size) 
    
        for (i in 1:length(measurements)){
            for (k in 1: sample_size){
                cell_intensity<-sample(dataset,1)
                measured_intensity[k]<-simulate_cell_measurement(cell_intensity, noise_sd,n_pixels)
            }
            if (i%%100 == 0 ) {
                print(paste('completed ',i,' of ', n_repeats,' repeats'))
                }
        measurements[i]<-mean(measured_intensity)
    }
    draw_histogram(measurements)
    print(paste('sampled cells: ', sample_size ,', pixels per cell: ', n_pixels,', mean: ', mean(measurements),', sd: ',sd(measurements)))
#   uncomment the following line if you want to return the measurement vector
#   return(measurements)
}
dataset <- cell_population
sample_size <- 16
n_pixels <- 1024
n_repeats <- 500
noise_sd <- 7.5
measurements<-rep(0, n_repeats)
measured_intensity<-rep(0, sample_size) 
measurements
measured_intensity
n_repeats <- 100
measurements<-rep(0, n_repeats)
measured_intensity<-rep(0, sample_size) 
print('hi')
for (i in 1:length(measurements)){
  for (k in 1: sample_size){
    cell_intensity<-sample(dataset,1)
    measured_intensity[k]<-simulate_cell_measurement(cell_intensity, noise_sd,n_pixels)
  }
  print (measured_intensity)
  print (mean(measured_intensity))
  measurements[i]<-mean(measured_intensity)
}
measurements
  measurements <- sapply(1:n_repeats, function(i) {
    measured_intensity <- sapply(1:sample_size, function(k){
      simulate_cell_measurement(sample(dataset,1), noise_sd, n_pixels)
    })
    mean(measured_intensity)
  })
measurements
repeat_measurements_inc_noise<-function(dataset, sample_size, n_pixels, n_repeats=500, noise_sd=60){
  measurements <- sapply(1:n_repeats, function(i) {
    measured_intensity <- sapply(1:sample_size, function(k){
      simulate_cell_measurement(sample(dataset,1), noise_sd, n_pixels)
    })
    mean(measured_intensity)
  })
  draw_histogram(measurements)
  print(paste('sampled cells: ', sample_size ,', pixels per cell: ', n_pixels,', mean: ', mean(measurements),', sd: ',sd(measurements)))
  return(measurements)
}
repeat_measurements_inc_noise(cell_population,16,1024,500,7.5)
2**2
2**4
1:10
1:20
sapply(1:20, function(i) 2**i)
sapply(1:20, function(i) 2**i)
transform (sapply(1:20, function(i) 2**i))
repeat_measurements_inc_noise(cell_population, 16, 1024, 7.5)
repeat_measurements_inc_noise<-function(dataset, sample_size, n_pixels,noise_sd=60, n_repeats=500 ){
  measurements <- sapply(1:n_repeats, function(i) {
    measured_intensity <- sapply(1:sample_size, function(k){
      simulate_cell_measurement(sample(dataset,1), noise_sd, n_pixels)
    })
    mean(measured_intensity)
  })
  draw_histogram(measurements)
  print(paste('sampled cells: ', sample_size ,', pixels per cell: ', n_pixels,', mean: ', mean(measurements),', sd: ',sd(measurements)))
  return(measurements)
}
repeat_measurements_inc_noise(cell_population, 16, 1024, 7.5)
repeat_measurements_inc_noise(cell_population, 32, 512, 15)
repeat_measurements_inc_noise(cell_population, 64, 256, 30)
repeat_measurements_inc_noise(cell_population, 128, 128, 60)
repeat_measurements_inc_noise(cell_population, 256, 64, 120)
repeat_measurements_inc_noise(cell_population, 512, 32, 240)
repeat_measurements_inc_noise(cell_population, 1024, 16, 480)
repeat_measurements_inc_noise(cell_population, 2048, 8, 960)
repeat_measurements_inc_noise(cell_population, 4096, 4, 1920)
cells_imaged <- as.factor(c(16,32,64,128,256,512,1024,2048,4096))
sd    <- (19.8582004384802, 14.0502292870686, 9.84563950457275, 6.51920981175702, 5.16853372128947, 4.14125776207561, 4.55567466750635, 7.65264498567552, 15.428528470, )
means <- (1199.89239700115, 1198.8968429896, 1199.34621235718, 1199.67678658241, 1199.45417477077, 1199.50184226687, 1199.32278652703, 1199.40741931823, 1200.42582312888)
sd    <- (19.8582004384802, 14.0502292870686, 9.84563950457275, 6.51920981175702, 5.16853372128947, 4.14125776207561, 4.55567466750635, 7.65264498567552, 15.428528470)
sd    <- (19.8582004384802, 14.0502292870686, 9.84563950457275, 6.51920981175702, 5.16853372128947, 4.14125776207561, 4.55567466750635, 7.65264498567552, 15.428528470)
sd    <- c(19.8582004384802, 14.0502292870686, 9.84563950457275, 6.51920981175702, 5.16853372128947, 4.14125776207561, 4.55567466750635, 7.65264498567552, 15.428528470)
means <- c(1199.89239700115, 1198.8968429896, 1199.34621235718, 1199.67678658241, 1199.45417477077, 1199.50184226687, 1199.32278652703, 1199.40741931823, 1200.42582312888)
data <- data.frame(cells_imaged, sd, means)
data
ggplot(data) + geom_scatter(aes(cells_imaged, sd))
ggplot(data) + geom_point(aes(cells_imaged, sd))
ggplot(data) + geom_line(aes(cells_imaged, sd)) 
ggplot(data) + geom_line(aes(cells_imaged, sd)) 
ggplot(data) + geom_line(aes(cells_imaged, sd)) 
ggplot(data) + geom_line(aes(x=cells_imaged,y= sd)) 
ggplot(data) + geom_curve(aes(x=cells_imaged,y= sd)) 
ggplot(data) + geom_line(aes(x=cells_imaged,y= sd)) 
ggplot(data) + geom_line(aes(x=as.numeric(cells_imaged),y= sd)) 
as.numeric(cells_imaged)
ggplot(data) + geom_line(aes(x=as.numeric(as.character(cells_imaged)),y= sd)) 
ggplot(data) + geom_curve(aes(x=as.numeric(as.character(cells_imaged)),y= sd)) 
ggplot(data) + geom_point(aes(x=as.numeric(as.character(cells_imaged)),y= sd)) 
ggplot(data) + geom_point(aes(x=as.numeric(as.character(cells_imaged)),y= sd)) +geom_stats()
ggplot(data) + geom_point(aes(x=as.numeric(as.character(cells_imaged)),y= sd)) +geom_smooth()
ggplot(data) + geom_point(aes(x=as.numeric(as.character(cells_imaged)),y= sd)) + geom_smooth()
ggplot(data) + geom_point(aes(x=as.numeric(as.character(cells_imaged)),y= sd)) + geom_smooth()
ggplot(data) + geom_point(aes(x=as.numeric(as.character(cells_imaged)),y= sd)) + geom_point(aes(x=as.numeric(as.character(cells_imaged)),y= mean)) geom_smooth()
ggplot(data) + geom_point(aes(x=as.numeric(as.character(cells_imaged)),y= sd)) + geom_point(aes(x=as.numeric(as.character(cells_imaged)),y= mean)) geom_smooth()
ggplot(data) + geom_point(aes(x=as.numeric(as.character(cells_imaged)),y= sd)) + geom_point(aes(x=as.numeric(as.character(cells_imaged)),y= mean)) + geom_smooth()
ggplot(data) + geom_point(aes(x=as.numeric(as.character(cells_imaged)),y= sd)) + geom_point(aes(x=as.numeric(as.character(cells_imaged)),y= mean))
ggplot(data) + geom_point(aes(x=as.numeric(as.character(cells_imaged)),y= sd)
                          ) + geom_point(aes(x=as.numeric(as.character(cells_imaged)),y= means))
cells_imaged <- as.factor(c(16,32,64,128,256,512,1024,2048,4096))
sd    <- c(19.8582004384802, 14.0502292870686, 9.84563950457275, 6.51920981175702, 5.16853372128947, 4.14125776207561, 4.55567466750635, 7.65264498567552, 15.428528470)
means <- c(1199.89239700115, 1198.8968429896, 1199.34621235718, 1199.67678658241, 1199.45417477077, 1199.50184226687, 1199.32278652703, 1199.40741931823, 1200.42582312888)
sd_data <- data.frame(cells_imaged, sd)
sd_data$panel <- 'Standard Deviation'
means_data <- data.frame(cells_imaged, means)
means_data$panel <- 'Means'
data <- rbind(sd_data, means_data)
sd_data
means_data
sd_data <- data.frame(cells_imaged, value=sd)
sd_data
sd_data <- data.frame(cells_imaged, value=sd)
sd_data$panel <- 'Standard Deviation'
means_data <- data.frame(cells_imaged, value=means)
means_data$panel <- 'Means'
data <- rbind(sd_data, means_data)
data
means_data <- data.frame(cells_imaged, value=means)
means_data$panel <- 'Mean'
data <- rbind(sd_data, means_data)
ggplot(data) + geom_point(aes(x=as.numeric(as.character(cells_imaged)),y= value)
) + facet_grid(panel~., scale="free")
ggplot(data) + geom_point(aes(x=cells_imaged,y= value)) + facet_grid(panel~., scale="free")
ggplot(data) + geom_point(aes(x=cells_imaged, y= value)) + facet_grid(panel~., scale="free")  + stat_summary(fun.data = 'mean_cl_boot', colour = 'red', geom = 'smooth')
ggplot(data) + geom_point(aes(x=cells_imaged, y= value)) + stat_summary(fun.data = 'mean_cl_boot', colour = 'red', geom = 'smooth')
xvalue = as.integer( as.character(cells_imaged) )
ggplot(data) + geom_point(aes(x=as.integer( as.character(cells_imaged) ) , y= value)) + stat_summary(fun.data = 'mean_cl_boot', colour = 'red', geom = 'smooth')
ggplot(data) + geom_point(aes(x=as.integer( as.character(cells_imaged) ) , y= value)) + geom_smooth()
ggplot(data) + geom_point(aes(x=as.integer( as.character(cells_imaged) ) , y= value)) + geom_smooth(method='lm',formula=y~x)
ggplot(data) + geom_point(aes(x=as.integer( as.character(cells_imaged) ) , y= value)) + geom_smooth(method='lm')
ggplot(data) + geom_point(aes(x=as.integer( as.character(cells_imaged) ) , y= value)) + geom_smooth(method='lm') + facet_grid(panel~., scale="free")
ggplot(data) + geom_point(aes(x=as.integer( as.character(cells_imaged) ), y= value)) + geom_smooth(method='lm') + facet_grid(panel~., scale="free")
ggplot(data) + geom_point(aes(x=as.integer( as.character(cells_imaged) ), y= value)) +stat_summary(fun.data=mean_cl_normal) + 
geom_smooth(method='lm') + facet_grid(panel~., scale="free")
cells_imaged <- c(16,32,64,128,256,512,1024,2048,4096)
sd    <- c(19.8582004384802, 14.0502292870686, 9.84563950457275, 6.51920981175702, 5.16853372128947, 4.14125776207561, 4.55567466750635, 7.65264498567552, 15.428528470)
means <- c(1199.89239700115, 1198.8968429896, 1199.34621235718, 1199.67678658241, 1199.45417477077, 1199.50184226687, 1199.32278652703, 1199.40741931823, 1200.42582312888)
sd_data <- data.frame(cells_imaged, value=sd)
sd_data$panel <- 'Standard Deviation'
means_data <- data.frame(cells_imaged, value=means)
means_data$panel <- 'Mean'
data <- rbind(sd_data, means_data)
xvalue = as.integer( as.character(cells_imaged) )
ggplot(data) + geom_point(aes(x=as.integer( as.character(cells_imaged) ), y= value)) +stat_summary(fun.data=mean_cl_normal) + 
geom_smooth(method='lm') + facet_grid(panel~., scale="free")
ggplot(data) + geom_point(aes(x=cells_imaged, y= value)) +stat_summary(fun.data=mean_cl_normal) + 
geom_smooth(method='lm') + facet_grid(panel~., scale="free")
ggplot(data) + geom_point(aes(x=cells_imaged, y= value)) +geom_smooth() + facet_grid(panel~., scale="free")
ggplot(sd_data) + geom_point(aes(x=cells_imaged, y= value)) +geom_smooth() + facet_grid(panel~., scale="free")
gg <- ggplot(sd_data) + geom_point(aes(x=cells_imaged, y= value))
gg <- gg + geom_smooth()
gg
gg <- gg + facet_grid(panel~., scale="free")
gg
gg <- ggplot(sd_data) + geom_point(aes(x=cells_imaged, y= value))
gg <- gg + stat_sum_df("mean_cl_normal", geom = "smooth", aes(group = 1), size = 1)
gg <- gg + facet_grid(panel~., scale="free")
gg
gg <- gg + stat_sum_df("mean_cl_normal", geom = "smooth", aes(group = 1), size = 1)
gg <- ggplot(sd_data) + geom_point(aes(x=cells_imaged, y= value))
gg <- gg + stat_smooth()
gg <- gg + facet_grid(panel~., scale="free")
gg
gg <- ggplot(sd_data) + geom_point(aes(x=cells_imaged, y= value))
gg <- gg + geom_smooth()
gg <- gg + facet_grid(panel~., scale="free")
gg
gg <- ggplot(sd_data, aes(x=cells_imaged, y= value)) + geom_point()
gg <- gg + geom_smooth()
gg <- gg + facet_grid(panel~., scale="free")
gg
cells_imaged <- as.factor(c(16,32,64,128,256,512,1024,2048,4096))
sd    <- c(19.8582004384802, 14.0502292870686, 9.84563950457275, 6.51920981175702, 5.16853372128947, 4.14125776207561, 4.55567466750635, 7.65264498567552, 15.428528470)
means <- c(1199.89239700115, 1198.8968429896, 1199.34621235718, 1199.67678658241, 1199.45417477077, 1199.50184226687, 1199.32278652703, 1199.40741931823, 1200.42582312888)
sd_data <- data.frame(cells_imaged, value=sd)
sd_data$panel <- 'Standard Deviation'
means_data <- data.frame(cells_imaged, value=means)
means_data$panel <- 'Mean'
data <- rbind(sd_data, means_data)
gg <- ggplot(data, aes(x=cells_imaged, y= value)) + geom_point()
gg <- gg + geom_smooth()
gg <- gg + facet_grid(panel~., scale="free")
gg
gg <- ggplot(data, aes(x=cells_imaged, y= value)) + geom_point()
gg <- gg + geom_smooth()
gg <- gg + facet_grid(panel~., scale="free")
gg
gg <- ggplot(data, aes(x=cells_imaged, y= value)) + geom_point()
gg <- gg + geom_smooth(method="lm")
gg <- gg + facet_grid(panel~., scale="free")
gg
gg <- ggplot(data, aes(x=cells_imaged, y= value)) + geom_line()
gg <- gg + geom_smooth(method="lm")
gg <- gg + facet_grid(panel~., scale="free")
gg
gg <- ggplot(data, aes(x=cells_imaged, y= value)) + geom_point(stat='summary', fun.y=sum) + stat_summary(fun.y=sum, geom="line")
gg <- gg + facet_grid(panel~., scale="free")
gg
gg <- ggplot(data, aes(x=cells_imaged, y= value)) + geom_point(stat='summary', fun.y=sum) + stat_summary(fun.y=sum, geom="line")
gg <- gg + facet_grid(panel~., scale="free")
gg
cells_imaged
gg <- ggplot(data, aes(x=cells_imaged, y= value)) + geom_point(stat='summary', fun.y=sum) + stat_summary(fun.y=sum, geom="line")
gg <- gg + facet_grid(panel~., scale="free")
gg
gg <- ggplot(data, aes(x=cells_imaged, y= value, group=1)) + geom_point(stat='summary', fun.y=sum) + stat_summary(fun.y=sum, geom="line")
gg <- gg + facet_grid(panel~., scale="free")
gg
gg <- ggplot(data, aes(x=cells_imaged, y= value, group=1)) + geom_point(stat='smooth', fun.y=sum) + geom_smooth(fun.y=sum, geom="line")
gg <- ggplot(data, aes(x=cells_imaged, y= value, group=1)) + geom_point(stat='smooth', fun.y=sum) + geom_smooth()
gg <- gg + facet_grid(panel~., scale="free")
gg
gg <- ggplot(data, aes(x=cells_imaged, y= value, group=1)) + geom_point(stat='smooth', fun.y=sum) + geom_smooth()
gg <- gg + facet_grid(panel~., scale="free")
gg
gg <- ggplot(data, aes(x=cells_imaged, y= value, group=1)) + geom_point() + geom_smooth()
gg <- gg + facet_grid(panel~., scale="free")
gg
xvalue = as.integer( as.character(cells_imaged) )
gg <- ggplot(data, aes(x=cells_imaged, y= value, group=1))
gg <- gg + geom_point() + geom_smooth() + xlab('Number of Cells Imaged')
gg + facet_grid(panel~., scale="free")
gg <- ggplot(data, aes(x=cells_imaged, y= value, group=1))
gg <- gg + geom_point(aes(colour="panel")) + geom_smooth() + xlab('Number of Cells Imaged')
gg + facet_grid(panel~., scale="free")
ggsave('Assignment/repeat_measurements_overview')
gg <- ggplot(data, aes(x=cells_imaged, y= value, group=1))
gg <- gg + geom_point(aes(colour=panel)) + geom_smooth() + xlab('Number of Cells Imaged')
gg + facet_grid(panel~., scale="free")
ggsave('Assignment/repeat_measurements_overview')
gg <- ggplot(data, aes(x=cells_imaged, y= value, group=1, colour=panel))
gg <- gg + geom_point() + geom_smooth() + xlab('Number of Cells Imaged')
gg + facet_grid(panel~., scale="free")
ggsave('Assignment/repeat_measurements_overview')
# Set up DataFrame to allow facetted GGPLOT scatter plot...
cells_imaged <- as.factor(c(16,32,64,128,256,512,1024,2048,4096))
sd    <- c(19.858, 14.050, 9.846, 6.519, 5.169, 4.141, 4.556, 7.653, 15.429)
means <- c(1199.892, 1198.897, 1199.346, 1199.677, 1199.454, 1199.502, 1199.323, 1199.407, 1200.426)
sd_data <- data.frame(cells_imaged, Value=sd)
sd_data$panel <- 'Standard Deviation'
means_data <- data.frame(cells_imaged, Value=means)
means_data$panel <- 'Mean'
data <- rbind(sd_data, means_data)
gg <- ggplot(data, aes(x=cells_imaged, y= value, group=1, colour=panel))
gg <- gg + geom_point() + geom_smooth() + xlab('Number of Cells Imaged')
gg + facet_grid(panel~., scale="free")
ggsave('Assignment/repeat_measurements_overview')
ggsave('Assignment/repeat_measurements_overview.png')
gg <- ggplot(data, aes(x=cells_imaged, y=Value, group=1, colour=panel))
gg <- gg + geom_point() + geom_smooth() + xlab('Number of Cells Imaged')
gg + facet_grid(panel~., scale="free")
ggsave('Assignment/repeat_measurements_overview.png')
cells_imaged <- c(16,32,64,128,256,512,1024,2048,4096)
sd    <- c(19.858, 14.050, 9.846, 6.519, 5.169, 4.141, 4.556, 7.653, 15.429)
means <- c(1199.892, 1198.897, 1199.346, 1199.677, 1199.454, 1199.502, 1199.323, 1199.407, 1200.426)
sd_data <- data.frame(cells_imaged, Value=sd)
sd_data$panel <- 'Standard Deviation'
means_data <- data.frame(cells_imaged, Value=means)
means_data$panel <- 'Mean'
data <- rbind(sd_data, means_data)
gg <- ggplot(data, aes(x=cells_imaged, y=Value, group=1, colour=panel))
gg <- gg + geom_point() + geom_smooth() + xlab('Number of Cells Imaged')
gg + facet_grid(panel~., scale="free")
ggsave('Assignment/repeat_measurements_overview.png')
gg <- ggplot(data, aes(x=log(cells_imaged), y=Value, group=1, colour=panel))
gg <- gg + geom_point() + geom_smooth() + xlab('Number of Cells Imaged')
gg + facet_grid(panel~., scale="free")
ggsave('Assignment/repeat_measurements_overview.png')
cells_imaged <- as.factor(c('16 cells','32 cells','64 cells','128 cells','256 cells','512 cells','1024 cells','2048 cells','4096 cells'))
sd    <- c(19.858, 14.050, 9.846, 6.519, 5.169, 4.141, 4.556, 7.653, 15.429)
means <- c(1199.892, 1198.897, 1199.346, 1199.677, 1199.454, 1199.502, 1199.323, 1199.407, 1200.426)
sd_data <- data.frame(cells_imaged, Value=sd)
sd_data$panel <- 'Standard Deviation'
means_data <- data.frame(cells_imaged, Value=means)
means_data$panel <- 'Mean'
data <- rbind(sd_data, means_data)
gg <- ggplot(data, aes(x=cells_imaged, y= Value, group=1, colour=panel))
gg <- gg + geom_point() + geom_smooth() + xlab('Number of Cells Imaged')
gg + facet_grid(panel~., scale="free")
cells_imaged <- as.factor(c('16 cells','32 cells','64 cells','128 cells','256 cells','512 cells','1024 cells','2048 cells','4096 cells'))
cells_imaged
gg <- ggplot(data, aes(x=cells_imaged, y= Value, group=1, colour=panel))
gg <- gg + geom_point() + geom_smooth() + xlab('Number of Cells Imaged')
gg + facet_grid(panel~., scale="free")
ggsave('Assignment/repeat_measurements_overview.png')
cells_imaged
Value
sd_data
cells_imaged <- as.character(c('16 cells','32 cells','64 cells','128 cells','256 cells','512 cells','1024 cells','2048 cells','4096 cells'))
sd    <- c(19.858, 14.050, 9.846, 6.519, 5.169, 4.141, 4.556, 7.653, 15.429)
means <- c(1199.892, 1198.897, 1199.346, 1199.677, 1199.454, 1199.502, 1199.323, 1199.407, 1200.426)
sd_data <- data.frame(cells_imaged, Value=sd)
sd_data$panel <- 'Standard Deviation'
means_data <- data.frame(cells_imaged, Value=means)
means_data$panel <- 'Mean'
data <- rbind(sd_data, means_data)
gg <- ggplot(data, aes(x=cells_imaged, y= Value, group=1, colour=panel))
gg <- gg + geom_point() + geom_smooth() + xlab('Number of Cells Imaged')
gg + facet_grid(panel~., scale="free")
ggsave('Assignment/repeat_measurements_overview.png')
cells_imaged <- as.factor(c(16,32,64,128,256,512,1024,2048,4096))
cells_imaged <- as.factor(c(16,32,64,128,256,512,1024,2048,4096))
cells_imaged <- as.factor(c(16,32,64,128,256,512,1024,2048,4096))
cells_imaged <- as.factor(c(16,32,64,128,256,512,1024,2048,4096))
cells_imaged <- as.factor(c(16,32,64,128,256,512,1024,2048,4096))
cells_imaged <- as.factor(c(16,32,64,128,256,512,1024,2048,4096))
cells_imaged <- as.factor(c(16,32,64,128,256,512,1024,2048,4096))
cells_imaged <- as.factor(c(16,32,64,128,256,512,1024,2048,4096))
cells_imaged <- as.factor(c(16,32,64,128,256,512,1024,2048,4096))
sd    <- c(19.858, 14.050, 9.846, 6.519, 5.169, 4.141, 4.556, 7.653, 15.429)
means <- c(1199.892, 1198.897, 1199.346, 1199.677, 1199.454, 1199.502, 1199.323, 1199.407, 1200.426)
sd_data <- data.frame(cells_imaged, Value=sd)
sd_data$panel <- 'Standard Deviation'
means_data <- data.frame(cells_imaged, Value=means)
means_data$panel <- 'Mean'
data <- rbind(sd_data, means_data)
gg <- ggplot(data, aes(x=cells_imaged, y= Value, group=1, colour=panel))
gg <- gg + geom_point() + geom_smooth() + xlab('Number of Cells Imaged')
gg + facet_grid(panel~., scale="free")
ggsave('Assignment/repeat_measurements_overview.png')
gg <- ggplot(data, aes(x=cells_imaged, y= Value, group=1, colour=panel))
gg <- gg + geom_point() + geom_smooth(se="false") + xlab('Number of Cells Imaged')
gg + facet_grid(panel~., scale="free")
ggsave('Assignment/repeat_measurements_overview.png')
rdata <- data.frame(cells_imaged, sd, mean)
cells_imaged
sd
mean
rdata <- data.frame(cells_imaged, sd, means)
gg <- ggplot(rdata, aes(x=cells_imaged, y= mean, group=1))
gg
gg <- gg + geom_point() + geom_smooth(se="false") + xlab('Number of Cells Imaged')
gg
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + geom_smooth(se="false") + xlab('Number of Cells Imaged')
gg
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + geom_smooth(se="false") + xlab('Number of Cells Imaged')
gg +   stat_summary(fun.data=mean_se, geom="ribbon", alpha=0.25)
mean_se
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + geom_smooth(se="false") + xlab('Number of Cells Imaged')
gg +   stat_summary(fun.ymax=means+sd, fun.ymin=means-sd , geom="ribbon", alpha=0.25)
rdata
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + geom_smooth(se="false") + xlab('Number of Cells Imaged')
gg +   stat_summary(fun.ymax=5, fun.ymin=5, geom="ribbon", alpha=0.25)
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + geom_smooth(se="false") + xlab('Number of Cells Imaged')
gg +   stat_summary(fun.ymax=5, fun.ymin=5, geom="ribbon", alpha=0.25)
gg +   stat_summary(fun.ymax=5, fun.ymin=5)
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + xlab('Number of Cells Imaged')
gg +   stat_summary(fun.ymax=5, fun.ymin=5, geom="ribbon", alpha=0.25)
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + xlab('Number of Cells Imaged')
gg + geom_errorbar(aes(ymin=means-sd, ymax=means+sd), width=.1, position=pd)
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + xlab('Number of Cells Imaged')
gg + geom_errorbar(aes(ymin=means-sd, ymax=means+sd), width=.1)
gg + geom_ribbon(aes(ymin=means-sd, ymax=means+sd), width=.1)
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + xlab('Number of Cells Imaged')
gg + geom_ribbon(aes(ymin=means-sd, ymax=means+sd), width=.1)
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + xlab('Number of Cells Imaged')
gg + geom_ribbon(aes(ymin=means-sd, ymax=means+sd))
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + xlab('Number of Cells Imaged')
gg + geom_ribbon(aes(ymin=means-sd, ymax=means+sd) alpha=0.1)
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + xlab('Number of Cells Imaged')
gg + geom_ribbon(aes(ymin=means-sd, ymax=means+sd), alpha=0.1)
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + xlab('Number of Cells Imaged')
gg + geom_ribbon(aes(ymin=means-sd, ymax=means+sd), alpha=0.2)
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + xlab('Number of Cells Imaged')
gg + geom_ribbon(aes(ymin=means-sd, ymax=means+sd), alpha=0.2)
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + xlab('Number of Cells Imaged')
gg + geom_ribbon(aes(ymin=means-sd, ymax=means+sd), alpha=0.3)
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + xlab('Number of Cells Imaged') + geom_smooth(se='false')
gg + geom_ribbon(aes(ymin=means-sd, ymax=means+sd), alpha=0.3)
gg <- gg + geom_point() + xlab('Number of Cells Imaged') + geom_smooth(se='false')
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + xlab('Number of Cells Imaged') + geom_smooth(se='false')
gg
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + xlab('Number of Cells Imaged') + geom_smooth(se='false')
gg + geom_ribbon(aes(ymin=means-sd, ymax=means+sd), alpha=0.3)
ggsave('Assignment/repeat_measurements_overview.png')
gg <- ggplot(rdata, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + xlab('Number of Cells Imaged') + geom_smooth(se='false')
gg + geom_ribbon(aes(ymin=means-sd, ymax=means+sd), alpha=0.3)
ggsave('Assignment/repeat_measurements_overview.png')
# Set up DataFrame to allow facetted GGPLOT scatter plot...
cells_imaged <- as.factor(c(16,32,64,128,256,512,1024,2048,4096))
sd    <- c(19.858, 14.050, 9.846, 6.519, 5.169, 4.141, 4.556, 7.653, 15.429)
means <- c(1199.892, 1198.897, 1199.346, 1199.677, 1199.454, 1199.502, 1199.323, 1199.407, 1200.426)
data <- data.frame(cells_imaged, sd, means)
gg <- ggplot(data, aes(x=cells_imaged, y= means, group=1))
gg <- gg + geom_point() + xlab('Number of Cells Imaged') + geom_smooth(se='false')
gg + geom_ribbon(aes(ymin=means-sd, ymax=means+sd), alpha=0.3)
ggsave('Assignment/repeat_measurements_overview.png')
q()
